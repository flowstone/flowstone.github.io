[{"title":"AJAX省市县三级联动的实现","date":"2017-09-13T16:00:00.000Z","path":"2017/09/14/jsp-ajax-three-level-linkage-effect-example.html","text":"省市县数据本例子中省市县数据保存在MySQL数据库中,部分数据截图如下: 从数据库中读取数据 导入需要的jar包 连接池配置文件 123456789101112131415161718192021&lt;c3p0-config&gt; &lt;!-- 默认配置，如果没有指定则使用这个配置 --&gt; &lt;default-config&gt; &lt;property name=\"driverClass\"&gt;com.mysql.jdbc.Driver&lt;/property&gt; &lt;property name=\"jdbcUrl\"&gt;jdbc:mysql://127.0.0.1:3306/test&lt;/property&gt; &lt;property name=\"user\"&gt;root&lt;/property&gt; &lt;property name=\"password\"&gt;数据库密码&lt;/property&gt; &lt;property name=\"checkoutTimeout\"&gt;30000&lt;/property&gt; &lt;property name=\"idleConnectionTestPeriod\"&gt;30&lt;/property&gt; &lt;property name=\"initialPoolSize\"&gt;10&lt;/property&gt; &lt;property name=\"maxIdleTime\"&gt;30&lt;/property&gt; &lt;property name=\"maxPoolSize\"&gt;100&lt;/property&gt; &lt;property name=\"minPoolSize\"&gt;10&lt;/property&gt; &lt;property name=\"maxStatements\"&gt;200&lt;/property&gt; &lt;user-overrides user=\"test-user\"&gt; &lt;property name=\"maxPoolSize\"&gt;10&lt;/property&gt; &lt;property name=\"minPoolSize\"&gt;1&lt;/property&gt; &lt;property name=\"maxStatements\"&gt;0&lt;/property&gt; &lt;/user-overrides&gt; &lt;/default-config&gt;&lt;/c3p0-config&gt; JDBCUtils工具类文件 通用JDBCUtils工具类文件,使用时直接引入 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172package org.xueyao.ajax.utils;import java.sql.Connection;import java.sql.ResultSet;import java.sql.SQLException;import java.sql.Statement;import javax.sql.DataSource;import org.apache.tomcat.jni.Thread;import com.mchange.v2.c3p0.ComboPooledDataSource;public class JDBCUtils &#123; private static ComboPooledDataSource comboPooledDataSource = new ComboPooledDataSource(); //使用ThreadLocal存取删链接对象 private static ThreadLocal&lt;Connection&gt; local = new ThreadLocal&lt;&gt;(); public static Connection getConnection() throws SQLException&#123; return comboPooledDataSource.getConnection(); &#125; public static DataSource getDataSource()&#123; return comboPooledDataSource; &#125; //从ThreadLocal获取链接的方法 public static Connection getCurrentConnection() throws SQLException&#123; //先从ThreadLocal获取中 Connection connection = local.get(); if(connection != null)&#123; System.out.println(\"从local获取数据：\"+connection); return connection; &#125;else&#123; //如果没有，在从链接池获取，存入ThreadLocal中 Connection conn = comboPooledDataSource.getConnection(); System.out.println(\"从连接池获取数据：\"+conn); local.set(conn); return conn; &#125; &#125; //开启事务的方法 public static void startTransaction() throws SQLException&#123; Connection connection = getCurrentConnection(); System.out.println(connection); connection.setAutoCommit(false); &#125; //提交事务的方法 public static void commit() throws SQLException&#123; Connection connection = getCurrentConnection(); System.out.println(connection); connection.commit(); &#125; //回滚事务的方法 public static void rollback() throws SQLException&#123; Connection connection = getCurrentConnection(); System.out.println(connection); connection.rollback(); &#125; //释放资源的方法 public static void close() throws SQLException&#123; Connection connection = getCurrentConnection(); System.out.println(connection); local.remove(); connection.close(); &#125; &#125; 创建JavaBean文件 1234567891011121314151617181920212223242526272829303132package org.xueyao.ajax.domain;public class Province &#123; private int codeid; private int parentid; private String cityName; public int getCodeid() &#123; return codeid; &#125; public void setCodeid(int codeid) &#123; this.codeid = codeid; &#125; public int getParentid() &#123; return parentid; &#125; public void setParentid(int parentid) &#123; this.parentid = parentid; &#125; public String getCityName() &#123; return cityName; &#125; public void setCityName(String cityName) &#123; this.cityName = cityName; &#125; @Override public String toString() &#123; return \"Province [codeid=\" + codeid + \", parentid=\" + parentid + \", cityName=\" + cityName + \"]\"; &#125; &#125; 创建Servlet文件,获取省市县数据 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950package org.xueyao.ajax.linkage;import java.io.IOException;import java.sql.SQLException;import java.util.List;import javax.servlet.ServletException;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import org.apache.commons.dbutils.QueryRunner;import org.apache.commons.dbutils.handlers.BeanListHandler;import org.xueyao.ajax.domain.Province;import org.xueyao.ajax.utils.JDBCUtils;import flexjson.JSONSerializer;public class GetDataServlet extends HttpServlet &#123; private static final long serialVersionUID = 1L; protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123; int parentid = Integer.parseInt(request.getParameter(\"parentid\")); String sql = \"SELECT * FROM province WHERE parentid=?\"; QueryRunner qr = new QueryRunner(JDBCUtils.getDataSource()); try &#123; List&lt;Province&gt; list = qr.query(sql, new BeanListHandler&lt;Province&gt;(Province.class), parentid); //System.out.println(list); //将list集合转换成json格式字符串 JSONSerializer jsonSerializer = new JSONSerializer(); String serialize = jsonSerializer.serialize(list); //System.out.println(serialize); //向页面输入字符串数据 response.setContentType(\"text/html;charset=utf-8\"); response.getWriter().write(serialize); &#125; catch (SQLException e) &#123; // TODO Auto-generated catch block e.printStackTrace(); &#125; &#125; protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123; doGet(request, response); &#125;&#125; 从页面显示三级联动123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172&lt;%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\"%&gt;&lt;%@ taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\"%&gt;&lt;c:set var=\"root\" value=\"$&#123;pageContext.request.contextPath &#125;\"&gt;&lt;/c:set&gt;&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\"&gt;&lt;html&gt;&lt;head&gt;&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"&gt;&lt;title&gt;省市县页面&lt;/title&gt;&lt;script type=\"text/javascript\" src=\"js/jquery-1.8.3.js\"&gt;&lt;/script&gt;&lt;script type=\"text/javascript\"&gt;$(function() &#123; //获得三个下拉菜单元素 var $pro = $(\"#province\"); var $city = $(\"#city\"); var $area = $(\"#area\"); $.get( \"$&#123;root&#125;/getData?parentid=0\", function(data) &#123; //alert(data); //遍历数据 $(data).each(function()&#123; //创建option标签,并追加到省级菜单中 $pro.append(\"&lt;option value='\"+this.codeid+\"'&gt;\"+this.cityName+\"&lt;/option&gt;\"); &#125;); &#125;,\"json\"); //省级菜单选择事件 $pro.change(function()&#123; //清空市县菜单中数据,保留第一个属性 $city.prop(\"length\",1); $area.prop(\"length\",1); $.get( \"$&#123;root&#125;/getData?parentid=\"+this.value, function(data) &#123; $(data).each(function() &#123; $city.append(\"&lt;option value='\"+this.codeid+\"'&gt;\"+this.cityName+\"&lt;/option&gt;\"); &#125;); &#125;,\"json\"); &#125;); //市级菜单选择事件 $city.change(function()&#123; //清空县菜单中数据,保留第一个属性 $area.prop(\"length\",1); $.get( \"$&#123;root&#125;/getData?parentid=\"+this.value, function(data) &#123; $(data).each(function()&#123; $area.append(\"&lt;option value='\"+this.codeid+\"'&gt;\"+this.cityName+\"&lt;/option&gt;\"); &#125;); &#125;,\"json\"); &#125;); &#125;);&lt;/script&gt;&lt;/head&gt;&lt;body&gt; &lt;center&gt; &lt;select id=\"province\" name=\"province\"&gt; &lt;option value=\"none\"&gt;--请选择省--&lt;/option&gt; &lt;/select&gt; &lt;select id=\"city\" name=\"city\"&gt; &lt;option value=\"none\"&gt;--请选择市--&lt;/option&gt; &lt;/select&gt; &lt;select id=\"area\" name=\"area\"&gt; &lt;option value=\"none\"&gt;--请选择县--&lt;/option&gt; &lt;/select&gt; &lt;/center&gt;&lt;/body&gt;&lt;/html&gt; 上面的javascript代码可以优化成这样: 123456789101112131415161718192021222324function loadData(value, ele)&#123; $.get( \"$&#123;root&#125;/getData?parentid=\"+value, function(data) &#123; //遍历数据 $(data).each(function()&#123; //创建option标签,追加到菜单中 ele.append(\"&lt;option value='\"+this.codeid+\"'&gt;\"+this.cityName+\"&lt;/option&gt;\"); &#125;); &#125;,\"json\");&#125;$(function() &#123; var $pro = $(\"#province\"); //加载省和直辖市数据 loadData(0,$pro); //加载市 $(\"#city,#area\").change(function () &#123; // 清空原来的数据 $(this).nextAll().prop(\"length\",1); loadData(this.value, $(this).next()); &#125;); &#125;); 效果图如下: 代码托管于GitHub","tags":[{"name":"javascript","slug":"javascript","permalink":"http://xueyao.org/tags/javascript/"},{"name":"ajax","slug":"ajax","permalink":"http://xueyao.org/tags/ajax/"},{"name":"jsp","slug":"jsp","permalink":"http://xueyao.org/tags/jsp/"}]},{"title":"","date":"2017-09-12T09:29:55.438Z","path":"2017/09/12/javamail-simple-example.html","text":"Javamail简单使用案例邮件开发环境搭建邮件服务器 易邮邮件服务器 邮件客户端 Foxmail 使用Javamail发送邮件 下载 javamail-samples.zip javax.mail.jar 官网地址http://www.oracle.com/technetwork/java/javamail/index.html 使用","tags":[]},{"title":"JavaWeb之JSP入门","date":"2017-09-06T12:54:57.000Z","path":"2017/09/06/java-web-jsp-start.html","text":"JSP原理及执行过程 流程图分析 用户发起请求,用户通过浏览器访问jsp页面,浏览器将HTTP协议的请求部分发送到服务端. 服务端获取请求部分,分析请求,发现本次的请求的的是jsp页面,jsp引擎按照内部规定,将jsp页面转换为一个servlet文件,并生成java文件,index_jsp.java,转换后的java文件中有init,service,destroy方法,在service方法中,将HTML标签原封不动输出到浏览器中,碰到java代码,复制到service方法中 JSP如何出现如果开发中直接使用servlet对客户端响应,是难以维护的,因为它把html标签全部写到java文件中,更改一个小的部件,就要修改servlet文件. JSP语法 JSP脚本段 存放定义型的语句 1&lt;%! %&gt; 普通的Java语句 1&lt;% %&gt; 可以计算出结果的表达式 1&lt;%= %&gt; JSP的注释 1&lt;%-- JSP的注释 --%&gt; 注意:JSP中实现注释,优先使用JSP注释,效率高,转换为servlet的时候,不需要处理 JSP指令 指令格式 &lt;%@ 指令名称 属性名1=”属性值1” 属性名2=”属性值2” 属性名3=”属性值3” %&gt; 指令的分类(3个) page:告诉JSP引擎如何将当前JSP转换为Servlet import=”cn.itcast.domain.Product 导入其他JAVA对象 language=”java”: 如果JSP中出现脚本,采用的语言类型,目前仅支持JAVA contentType=”text/html;charset=UTF-8”:告诉浏览器,本次响应内容类型和编码 pageEncoding=”UTF-8” :告诉JSP引擎,当前页面采用的编码格式 autoFlush=”true”: 是否自动刷新 buffer=”8kb”: response缓存区大小 session=”true”: 如果获取不到sessionid是否创建session errorPage=”error.jsp”: 当前页面发生错误之后,处理错误页面 isErrorPage=”true”:当前页面是错误页面 include:包含其它文件 taglib:引用其它的标签库 内置对象(9个) application config JSP相当于servlet可以为servlet配置参数,也可以为JSP配置参数 out 2个out不是同一个对象,response对应的out优先级高 JSP中默认使用内置的out对象 request response session exception 需要将当前页面的page指令下设置isErrorPage=”true”才能使用 作用:开发阶段,通过JSP中获取exception中的信息判断JSP出错异常信息 pageContext 获取其它8个内置对象 当作域对象使用 操作其它域对象 pageContext.findAttribute(name) pageContext&gt;request&gt;session&gt;application page 代表this(当前访问的servlet) JSP域对象 pageContext request session application JSP动作 &lt;jsp:forward page=\"\"&gt;&lt;/jsp:forward&gt; &lt;jsp:include page=\"\"&gt;&lt;/jsp:include&gt;","tags":[{"name":"jsp","slug":"jsp","permalink":"http://xueyao.org/tags/jsp/"}]},{"title":"js小例子之二级联动","date":"2017-08-25T16:00:00.000Z","path":"2017/08/26/js-linkage-effect-example.html","text":"联动原理当用户点击省级的下拉选项,选择所在省,下一个下拉选项里的选项,则变成用户选择省下的所有市的信息,不会出现其它省市的信息. 省市数据把省市数据,保存在js文件中,以json形式保存,以便读取,下面代码使用部分数据,不影响效果123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293var china = [ &#123; \"p_name\": \"吉林省\", \"p_id\": \"jl\", \"cities\": [ &#123; \"c_name\": \"长春\", \"c_id\": \"cc\" &#125;, &#123; \"c_name\": \"四平\", \"c_id\": \"sp\" &#125;, &#123; \"c_name\": \"通化\", \"c_id\": \"th\" &#125;, &#123; \"c_name\": \"松原\", \"c_id\": \"sy\" &#125; ] &#125;, &#123; \"p_name\": \"辽宁省\", \"p_id\": \"ln\", \"cities\": [ &#123; \"c_name\": \"沈阳\", \"c_id\": \"sy\" &#125;, &#123; \"c_name\": \"大连\", \"c_id\": \"dl\" &#125;, &#123; \"c_name\": \"抚顺\", \"c_id\": \"fs\" &#125;, &#123; \"c_name\": \"铁岭\", \"c_id\": \"tl\" &#125; ] &#125;, &#123; \"p_name\": \"山东省\", \"p_id\": \"sd\", \"cities\": [ &#123; \"c_name\": \"济南\", \"c_id\": \"jn\" &#125;, &#123; \"c_name\": \"青岛\", \"c_id\": \"qd\" &#125;, &#123; \"c_name\": \"威海\", \"c_id\": \"wh\" &#125;, &#123; \"c_name\": \"烟台\", \"c_id\": \"yt\" &#125; ] &#125;, &#123; \"p_name\": \"上海市\", \"p_id\": \"sh\", \"cities\": [ &#123; \"c_name\": \"闵行区\", \"c_id\": \"mh\" &#125;, &#123; \"c_name\": \"徐汇区\", \"c_id\": \"xh\" &#125;, &#123; \"c_name\": \"黄浦区\", \"c_id\": \"hp\" &#125;, &#123; \"c_name\": \"浦东新区\", \"c_id\": \"pd\" &#125; ] &#125;]; 获取省市数据通过js dom编程读取省市数据,把省市数据读取到对应的select选项中.12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;title&gt;二级联动&lt;/title&gt; &lt;meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\"&gt; &lt;/head&gt; &lt;body&gt; &lt;select id=\"province\" name=\"province\"&gt; &lt;option value=\"none\"&gt;--请选择省--&lt;/option&gt; &lt;/select&gt; &lt;select id=\"city\" name=\"city\"&gt; &lt;option value=\"none\"&gt;--请选择市--&lt;/option&gt; &lt;/select&gt; &lt;!-- 载入省市数据 --&gt; &lt;script type=\"text/javascript\" src=\"cities.js\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\" &gt; //获得省级下拉框对象 var province = document.getElementById(\"province\"); //遍历省市数据,并把里面省的数据追加到option选项中 for (var i=0; i&lt;china.length; i++) &#123; var option = document.createElement(\"option\"); option.value = china[i].p_id; option.innerHTML = china[i].p_name; province.appendChild(option); &#125; //省级下拉框发生改变事件 province.onchange = function() &#123; //获取当前点击对象的值 var proid = this.value; var cities; //遍历省市数据,把省级下点击的那一个选项的值和省市数据中的 //省级数据对比,如果相等,取出当前的市的数据 for (var i=0; i&lt;china.length; i++) &#123; if (proid == china[i].p_id) &#123; cities = china[i].cities; &#125; &#125; //获得市级下拉框对象 var city = document.getElementById(\"city\"); //每次点击省级后,市级初始化,避免高级重复追加 city.innerHTML = \"&lt;option value='none'&gt;--请选择市--&lt;/option&gt;\"; //遍历市级数据,并取出市级数据,追加到市级对象中 for (var i=0; i&lt;cities.length; i++) &#123; var option = document.createElement(\"option\"); option.innerHTML = cities[i].c_name; option.value = cities[i].c_id; city.appendChild(option); &#125; &#125; &lt;/script&gt; &lt;/body&gt; &lt;/html&gt; 二级联动效果 代码托管于GitHub","tags":[{"name":"javascript","slug":"javascript","permalink":"http://xueyao.org/tags/javascript/"}]},{"title":"关于equals()方法两边变量如何放置","date":"2017-07-06T16:00:00.000Z","path":"2017/07/07/Java-Equals-Position.html","text":"两个变量放置位置如果是两个都是变量，可以放在equals任意一边，没有区别 常量、变量放置位置如果有一个是常量，equals()方法在使用时，建议equals()方法前面放常量。因为equals()是Object类中定义的，任何对象都可以调用equals()方法，但是，如果对象的值是null的话，会引起空指针异常。 如果变量放在前面也就相当调用变量的equals()方法，变量为空时，就会报空指针异常。所以把常量放在equals()方法前面，是非常好的习惯。 再者，如果变量放在equals()方法的括号内，变量为空时，equals()方法和null做比较，不会出现异常。 如下： 123//constant为常量，variable为变量constant.equals(variable); //建议这样使用variable.equals(constant); //不建议使用，当变量为空时，会出现空指针异常","tags":[{"name":"java","slug":"java","permalink":"http://xueyao.org/tags/java/"},{"name":"equals","slug":"equals","permalink":"http://xueyao.org/tags/equals/"}]},{"title":"Java-Random入门","date":"2017-07-01T16:00:00.000Z","path":"2017/07/02/Java-Random-Study.html","text":"什么是Random？当用户要产生一个随机数，java本身提供了丰富的Random类。用户可以根据需求创建Random对象，根据Random类下的方法创建特殊的随机数。 如何创建Random?首先用户要创建一个Random对象 1Random random = new Random(); 不过在使用对象之前，要导入对应的包 1import java.util.Random; 当用户要创建一个整型的随机数，范围在0-100之间 12345/*创建随机数时，如nextInt(m),里面的范围有一定的规律，如果用户要创建一个m-n(包括m,n)的随机数时，公式：nextInt(n-m+1)+m;如果用户要创建一个m-n(不包括m,n)的随机数时，公式：nextInt(n-m);*/int num = random.nextInt(101); 用户可以创建各种类型的随机数，只需要使用对应的方法，即可生成。","tags":[{"name":"java","slug":"java","permalink":"http://xueyao.org/tags/java/"},{"name":"Random","slug":"Random","permalink":"http://xueyao.org/tags/Random/"}]},{"title":"GitHub Pages 二级域名的配置","date":"2017-02-02T16:00:00.000Z","path":"2017/02/03/github-page-sub-domains.html","text":"域名配置指南 首先创建一个新的仓库，并在设置中设置GitHub Pages的Source从master主分支上构建，点击保存，如下图所示: 并在Custom domain 里填写自定义的二级域名，如下图所示: 在你的域名注册商那里设置域名的DNS,类型CNAME,具体配置如下: 把写好的代码同步到创建的仓库中，通过浏览器访问二级域名，效果如下： 注意此二级域名的一级域名必须解析到自己flowstone.github.io下，如下图所示：","tags":[{"name":"github","slug":"github","permalink":"http://xueyao.org/tags/github/"},{"name":"域名","slug":"域名","permalink":"http://xueyao.org/tags/域名/"}]},{"title":"2017年小目标","date":"2016-12-31T16:00:00.000Z","path":"2017/01/01/2017-small-goal.html","text":"2017年小目标 1.看12本书籍 2.每天更新github 3.每天5000步 目标定期更新","tags":[{"name":"目标","slug":"目标","permalink":"http://xueyao.org/tags/目标/"}]},{"title":"Ajax自定义日历","date":"2016-09-26T16:00:00.000Z","path":"2016/09/27/ajax-custom-calendar.html","text":"需求分析在一些购物网站中，都会有促销活动，这些活动都在日历上标注出来，如何通过Ajax让日历通过读取数据库中的信息，正确的把促销活动标注在日历上，本文通过自定义日历来实现这个问题。 技术难点 日历的布局 日历的初始化 日历的动态变化 日历的促销定制 实现方法1、 先创建一个固定的日历，效果如下 html代码如下 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879&lt;!DOCTYPE html&gt;&lt;html lang=\"en\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;Title&lt;/title&gt; &lt;style type=\"text/css\"&gt; * &#123;margin: 0; padding: 0;&#125; body &#123;font-size: 13px;&#125; .calendar &#123;width: 330px; margin: 0 auto;&#125; .calendar .title &#123; position: relative; width: 100%; height: 30px; line-height: 30px; background: #17a4eb; &#125; .title div &#123;position: absolute;&#125; .prev &#123;left: 10px; &#125; .now &#123;left: 40%;&#125; .next &#123;right: 10px;&#125; input &#123;height: 30px; width: 300px; margin: 100px 475px 0px;&#125; table &#123;width: 100%; border-collapse: collapse;&#125; table th &#123;border: 1px solid #ccc;&#125; table td &#123;text-align: center; border: 1px solid #ccc;&#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;input type=\"text\"&gt; &lt;div class=\"calendar\"&gt; &lt;div class=\"title\"&gt; &lt;div class=\"prev\"&gt; &lt;span&gt;08&lt;/span&gt;月 &lt;/div&gt; &lt;div class=\"now\"&gt; &lt;span&gt;2016&lt;/span&gt;年 &lt;span&gt;09&lt;/span&gt;月 &lt;/div&gt; &lt;div class=\"next\"&gt; &lt;span&gt;10&lt;/span&gt;月 &lt;/div&gt; &lt;/div&gt; &lt;table&gt; &lt;!--星期部分--&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;日&lt;/th&gt; &lt;th&gt;一&lt;/th&gt; &lt;th&gt;二&lt;/th&gt; &lt;th&gt;三&lt;/th&gt; &lt;th&gt;四&lt;/th&gt; &lt;th&gt;五&lt;/th&gt; &lt;th&gt;六&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;!--日期部分--&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;1&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;1&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 当创建固定日历后，把日历的html部分注释掉(title和table)，保留css部分 2、 通过javascript动态生成日历 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193window.onload = function () &#123; var oInput = document.getElementsByTagName('input')[0]; var oCalendar = document.getElementById('calendar');// console.log(oCalendar); var oDate = new Date(); var year = oDate.getFullYear(); var month = oDate.getMonth()+1; //日期td var oTds = oCalendar.getElementsByTagName('td'); var flag = false; oInput.onfocus = function () &#123; showDate(year,month); &#125; //显示日历 function showDate(year,month) &#123; if (false == flag) &#123; var oTitle = document.createElement('div'); oTitle.className = 'title'; oTitle.innerHTML = '&lt;div class=\"prev\"&gt; &lt;span&gt;'+(month-1)+'&lt;/span&gt;月 &lt;/div&gt; ' + '&lt;div class=\"now\"&gt; &lt;span&gt;'+year+'&lt;/span&gt;年 &lt;span&gt;'+month+'&lt;/span&gt;月 &lt;/div&gt; ' + '&lt;div class=\"next\"&gt; &lt;span&gt;'+(month+1)+'&lt;/span&gt;月 &lt;/div&gt;'; oCalendar.appendChild(oTitle); //月份span ospans = oCalendar.getElementsByTagName('span'); // console.log(ospans); prevMonth = ospans[0]; nextMonth = ospans[3]; nowMonth = ospans[2]; nowYear = ospans[1]; //创建星期 var otable = document.createElement('table'); var othead = document.createElement('thead'); var otr = document.createElement('tr'); var arr = ['日','一','二','三','四','五','六']; for (var i=0; i&lt;arr.length; i++) &#123; //创建th var oth = document.createElement('th'); oth.innerHTML = arr[i]; otr.appendChild(oth); &#125; othead.appendChild(otr); otable.appendChild(othead); oCalendar.appendChild(otable); //先获得当前月有多少天 if (1 == month || 3 == month || 5 == month || 7 == month || 8 == month || 10 == month || 12 == month) &#123; var dayNum = 31; &#125; else if (4 == month || 6 == month || 9 == month || 11 == month) &#123; var dayNum = 30; &#125; else if (2 == month &amp;&amp; isLeapYear(year)) &#123; var dayNum = 29; &#125; else &#123; var dayNum = 28; &#125; //确定当前月的1号是星期几 oDate.setFullYear(year); oDate.setMonth(month-1); oDate.setDate(1); //日期 var otbody = document.createElement('tbody'); for (var i=0; i&lt;6; i++) &#123; var oTr = document.createElement('tr'); //每行里面有7列 for (var j=0; j&lt;7; j++) &#123; var oTd = document.createElement('td'); //oTd.innerHTML = 1; oTr.appendChild(oTd); &#125; otbody.appendChild(oTr); &#125; otable.appendChild(otbody); //获得今天1号对应的是星期几 var week = oDate.getDay(); var oTds = oCalendar.getElementsByTagName('td'); //alert(week); for (var i=0; i&lt;dayNum; i++) &#123; oTds[i+week].innerHTML = i+1; &#125; //如果当前月month 是12或者1 if (1 == month) &#123; prevMonth.innerHTML = 12; &#125; else if (12 == month) &#123; nextMonth.innerHTML = 1; &#125; //让当前日期显示红色、后面的显示蓝色 showColor(); //给左右月份绑定点击事件 monthEvent(); //给所有的td绑定点击事件 tdClick(); //判断最后一行是否全为空 lastTr(); //获得促销信息 getPromotion(); flag = true; &#125; &#125; //最后一行如果全部为空就将其隐藏 function lastTr() &#123; //查找最后一行的所有td var flag = true; for (var i=35; i&lt;42; i++) &#123; if (oTds[i].innerHTML != '') &#123; //有任何一个td不为空就设置为false flag = false; &#125; &#125; //全部是空的 if (flag) &#123; for (var i=35; i&lt;42; i++) &#123; oTds[i].style.display = 'none'; &#125; &#125; &#125; //给所有的td绑定点击事件 function tdClick() &#123; for (var i=0; i&lt;oTds.length; i++) &#123; oTds[i].onclick = function() &#123; if ('red' == this.className ||'blue' == this.className) &#123; var year = nowYear.innerHTML; var month = nowMonth.innerHTML; var date = this.innerHTML; oInput.value = year +'-'+month+'-'+date; flag = false; oCalendar.innerHTML = ''; &#125; else &#123; alert('您只能选择红色或蓝色区域'); &#125; &#125; &#125; &#125; //当前日期显示红色、后面的显示蓝色 function showColor() &#123; //当前的日期 var oday = new Date().getDate(); for (var i=0; i&lt;oTds.length; i++) &#123; if (oday == oTds[i].innerHTML) &#123; oTds[i].className = 'red'; var oindex = i; &#125; &#125; for (var j=oindex+1; j&lt;oTds.length; j++) &#123; oTds[j].className = 'blue'; &#125; &#125; //给左右月份绑定点击事件 function monthEvent() &#123; //向左的月份div prevMonth.parentNode.onclick = function () &#123; //alert('向左'); flag = false; oCalendar.innerHTML = ''; if (12 == prevMonth.innerHTML) &#123; showDate(year -= 1, 12); &#125; else &#123; showDate(year,parseInt(prevMonth.innerHTML)); &#125; &#125; //向左的月份div nextMonth.parentNode.onclick = function () &#123; //alert('向右'); flag = false; oCalendar.innerHTML = ''; if (1 == nextMonth.innerHTML) &#123; showDate(year+=1,1); &#125; else &#123; showDate(year,parseInt(nextMonth.innerHTML)); &#125; &#125; &#125; //判断是否是闰年 function isLeapYear(year) &#123; if (0 == year%100 &amp;&amp; 0 == year%400) &#123; return true; &#125;else if (year%100 != 0 &amp;&amp; year%4 ==0) &#123; return true; &#125; else &#123; return false; &#125; &#125;&#125; 3、 从服务器获取促销的信息并在日历中显示 12345678910111213141516171819202122//从服务器获取促销信息 function getPromotion() &#123; $.request(&#123; method:\"post\", //获取方式 url:\"promotion.php\", //从哪个文件中获取 data:\"\", //是否传递数据 callback:function (res) &#123; eval(\"var obj=\"+res); if (obj.status) &#123; var dates = obj.dates; for (var i=0; i&lt;dates.length; i++) &#123; for (var j=0; j&lt;oTds.length; j++) &#123; if (oTds[j].innerHTML == dates[i]) &#123; oTds[j].innerHTML += \"促销\"; oTds[j].style.background = 'red'; &#125; &#125; &#125; &#125; &#125; &#125;); &#125; $.request()是封装在js里的Ajax方法,代码如下： 12345678910111213141516171819202122232425262728293031323334353637383940var $ = &#123; request:function(obj)&#123; var xhr; try &#123; //主流浏览器里面的ajax对象 xhr = new XMLHttpRequest(); &#125; catch(e) &#123; //IE低版本的浏览器 xhr = new ActiveXObject(\"Microsoft.XMLHTTP\"); &#125; //建立和服务器的连接 if (obj.method == 'get') &#123; xhr.open(obj.method,obj.url+'?'+obj.data+'&amp;'+Math.random(),true); xhr.send(); &#125; else if (obj.method == 'post') &#123; xhr.open(obj.method,obj.url,true); xhr.setRequestHeader(\"Content-Type\",\"application/x-www-form-urlencoded\"); xhr.send(obj.data); &#125; //监视服务器的处理状态 xhr.onreadystatechange = function()&#123; if (4 == xhr.readyState &amp;&amp; 200 == xhr.status) &#123; //说明请求成功了，输出服务器返回的数据 obj.callback(xhr.responseText); &#125; &#125; &#125;&#125;``` promotion.php ``` php&lt;?php $data['status'] = 1; //促销时间 $data['dates'] = array(28,29,30); echo json_encode($data); 最终效果图如下，样式不是很美观 代码托管于GitHub","tags":[{"name":"javascript","slug":"javascript","permalink":"http://xueyao.org/tags/javascript/"},{"name":"日历","slug":"日历","permalink":"http://xueyao.org/tags/日历/"},{"name":"ajax","slug":"ajax","permalink":"http://xueyao.org/tags/ajax/"}]},{"title":"JS特效-轮播图","date":"2016-09-16T16:00:00.000Z","path":"2016/09/17/use-js-simple-carousel-picture.html","text":"效果如下 功能分析 1.每隔1秒换一张图片 2.鼠标移入停止切换、鼠标离开继续切换 3.鼠标移入到数字上面的时候,显示和数字对应的图片,并且停止切换,被选中的数字,背景显示橙色 4.鼠标离开数字,从该数字后面继续显示 代码如下 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset=\"utf-8\"&gt; &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"&gt; &lt;title&gt;&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"\"&gt; &lt;style type=\"text/css\"&gt; div, img, ul, li &#123; padding: 0px; margin: 0px; &#125; .content &#123; width: 480px; height: 300px; border: 1px solid red; margin: 100px auto; &#125; img &#123; width: 100%; height: 100%; padding-bottom: 10px; &#125; ul li &#123; list-style: none; float: left; border: 1px solid orange; height: 30px; width: 58px; text-align: center; line-height: 30px; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class=\"content\"&gt; &lt;img src=\"./img/1.jpg\" alt=\"\"&gt; &lt;ul&gt; &lt;li&gt;1&lt;/li&gt; &lt;li&gt;2&lt;/li&gt; &lt;li&gt;3&lt;/li&gt; &lt;li&gt;4&lt;/li&gt; &lt;li&gt;5&lt;/li&gt; &lt;li&gt;6&lt;/li&gt; &lt;li&gt;7&lt;/li&gt; &lt;li&gt;8&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;script type=\"text/javascript\"&gt; var oImg = document.getElementsByTagName('img')[0]; var count = 1; function changePic()&#123; count ++; if (count &gt; 8) &#123; count = 1; &#125; oImg.src = 'img/'+count+ '.jpg'; &#125; var interID = setInterval(changePic, 1000); //鼠标移入停止播放 oImg.onmouseover = function()&#123; clearInterval(interID); &#125; //鼠标移出继续播放 oImg.onmouseout = function()&#123; //console.log(interID); clearInterval(interID); interID = setInterval(changePic, 1000); &#125; //鼠标移入到数字上的时候,显示对应的图片 var oLi = document.getElementsByTagName('li'); //console.log(oLi.length); for (var num = 0; num &lt; oLi.length; num++) &#123; //给每个li标签增加属性，保存当前的索引位置 oLi[num].index = num; //移到到数字上,停止播放 oLi[num].onmouseover = function()&#123; //停止播放 clearInterval(interID); this.style.background = 'orange'; count = this.index; //调用循环播放图片方法 changePic(); &#125; //移出时,继续从停止的地方播放 oLi[num].onmouseout = function()&#123; clearInterval(interID); interID = setInterval(changePic, 1000); this.style.background = 'white'; count = this.index; changePic(); &#125; &#125; &lt;/script&gt;&lt;/body&gt;","tags":[{"name":"javascript","slug":"javascript","permalink":"http://xueyao.org/tags/javascript/"},{"name":"轮播","slug":"轮播","permalink":"http://xueyao.org/tags/轮播/"}]},{"title":"开发自定义模板引擎","date":"2016-08-23T16:00:00.000Z","path":"2016/08/24/define-model-engine.html","text":"自定义模板引擎类MyTpl.class.php 12345678910111213141516171819202122&lt;?phpclass MyTpl&#123; private $tpl_vars = array(); //分配 public function assign($key,$value)&#123; $this-&gt;tpl_vars[$key] = $value; &#125; public function display($tpl)&#123; $contents = file_get_contents($tpl); foreach ($this-&gt;tpl_vars as $k =&gt; $v)&#123; //替换 将&#123;$name&#125; 替换成真实的数据 $contents = str_replace('&#123;$'.\"$k\".'&#125;',\"$v\", $contents); $compile = './templates_c/'.md5('show.html') . '.php'; file_put_contents($compile, $contents); require $compile; &#125; &#125;&#125;$tpl = new MyTpl;$tpl-&gt; assign('name','张四');$tpl-&gt; display('./template/show.html'); 自定义视图template/show.html 12345678910&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=\"UTF-8\"&gt;&lt;title&gt;Insert title here&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &#123;$name&#125;&lt;/body&gt;&lt;/html&gt;","tags":[{"name":"template","slug":"template","permalink":"http://xueyao.org/tags/template/"}]},{"title":"Cookie实例-保存用户登录时的用户名","date":"2016-08-18T16:00:00.000Z","path":"2016/08/19/cookie-save-user-info.html","text":"实现一个登录界面,记录用户名的信息,10小时内，不需要重新输入用户名的信息。(请使用Cookie完成) 界面代码如下 123456789101112131415161718&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset=\"utf-8\"&gt; &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"&gt; &lt;title&gt;&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"\"&gt;&lt;/head&gt;&lt;body&gt; &lt;form action=\"user.php?a=check\" method='post'&gt; u: &lt;input type=\"text\" name='username' value=\"&lt;?php echo $username;?&gt;\"&gt;&lt;br/&gt; p: &lt;input type=\"password\" name='password'&gt;&lt;br/&gt; 是否保存用户名 &lt;input type=\"radio\" value='yes' name='save'&gt;保存10小时 &lt;input type=\"radio\" value='no' name='save'&gt;不保存&lt;br/&gt; &lt;input type=\"submit\" value=\"登录\"&gt; &lt;/form&gt;&lt;/body&gt;&lt;/html&gt; 代码如下： 123456789101112131415161718192021222324252627282930313233343536373839&lt;?phpheader('content-type:text/html;charset=utf-8');$action = isset($_GET['a']) ? $_GET['a'] :'login';if ($action == 'login') &#123; $username = ''; if (isset($_COOKIE['username']))&#123; $username = $_COOKIE['username']; &#125; require 'myLogin.html';&#125; elseif ($action == 'check') &#123; $username = isset($_POST['username']) ? $_POST['username'] : ''; $pwd = isset($_POST['password']) ? $_POST['password'] : ''; $is_save = isset($_POST['save']) ? $_POST['save'] : ''; if ($pwd == '123') &#123;//默认密码为123 if ($is_save == 'yes') &#123;//如果点击保存用户名，则设置cookie //设置cookie,保存用户名 setcookie('username',$username,time() + 30); $info = '恭喜登录成功，保存了你的用户名到cookie'; require 'myLoginOk.html'; &#125;elseif ($is_save == 'no')&#123;//点击不保存用户名，如果cookie中有数据，则删除cookie if(isset($_COOKIE['username']))&#123; setcookie('username','',time() - 1); unset($_COOKIE['username']); &#125; $info = '恭喜登录成功，删除你的用户名cookie'; require 'myLoginOk.html'; &#125;else &#123; //如果什么都没选择,则直接显示登陆成功 $info = '恭喜登录成功'; require 'myLoginOk.html'; &#125; &#125;else&#123;//密码不正确 $info = '用户名,密码不正确'; require 'myloginError.html'; &#125;&#125;","tags":[{"name":"cookie","slug":"cookie","permalink":"http://xueyao.org/tags/cookie/"}]},{"title":"git入门","date":"2016-07-17T16:00:00.000Z","path":"2016/07/18/git.html","text":"安装下载git OSX版下载git Windows版下载git Linux版 创建新仓库创建新文件夹，打开，然后执行git init以创建新的git仓库 克隆仓库创建一个本地仓库的克隆版本：git clone /path/to/repository如果要克隆服务器上的仓库，你的命令会是这个样子：git clone username@host:/path/to/repository 添加与提交git add &lt;filename&gt;git add *git add .这是git基本工作流程的第一步;使用如下命令以实际提交改动：git commit -m &#39;代码提交信息&#39; 推送仓库改动提交到远端仓库：git push origin master可以把master 换成你想要推送的任何分支。如果你还没有克隆现有仓库，并欲将你的仓库连接到某个远程服务器，你可以使用如下命令添加：git remote add origin &lt;server&gt; 更新与合并要更新你的本地仓库至最新改动，执行：git pull 以在你的工作目录中 获取（fetch） 并 合并（merge） 远端的改动。要合并其他分支到你的当前分支（例如 master），执行：git merge &lt;branch&gt; 两种情况下，git 都会尝试去自动合并改动。不幸的是，自动合并并非次次都能成功，并可能导致 冲突（conflicts）。 这时候就需要你修改这些文件来合并这些冲突（conflicts）了。改完之后，你需要执行如下命令以将它们标记为合并成功：git add &lt;filename&gt; 在合并改动之前，也可以使用如下命令查看：git diff &lt;source_branch&gt; &lt;target_branch&gt; 替换本地改动假如你做错事（自然，这是不可能的），你可以使用如下命令替换掉本地改动：git checkout -- &lt;filename&gt;此命令会使用 HEAD 中的最新内容替换掉你的工作目录中的文件。已添加到缓存区的改动，以及新文件，都不受影响。假如你想要丢弃你所有的本地改动与提交，可以到服务器上获取最新的版本并将你本地主分支指向到它：git fetch origingit reset --hard origin/master 注1. git init2. git add .3. git commit -m &quot;first commit&quot;4. git remote add origin 远程仓库地址5. git push -u origin master 可以通过如下命令进行代码合并【注：pull=fetch+merge]git pull --rebase origin master","tags":[{"name":"git","slug":"git","permalink":"http://xueyao.org/tags/git/"}]},{"title":"安装WAMP开发环境","date":"2016-07-15T16:00:00.000Z","path":"2016/07/16/apache-mysql-php-phpmyadmin-install.html","text":"如何安装WAMP开发环境一.Apache安装 1.以管理员方式运行cmd2.在apache\\bin目录下运行 httpd -k install3.安装成功后配置apache的配置文件4.将配置文件中apache的安装目录改成你apache的位置5.并修改serverName服务地址为localhost6.配置后，重新启动apache服务 httpd -k start 二.PHP安装 1.将php处理模块和apache整合到一起，修改httpd.conf123456//PHP - Module LoadModule php5_module \"&#123;php路径&#125;/php5.6.16/php5apache2_4.dll\" &lt;FilesMatch \\.php$&gt; SetHandler application/x-httpd-php &lt;/FilesMatch&gt; PHPIniDir \"&#123;php路径&#125;/php5.6.16/\" 2.将php.ini-deployment 改成 php.ini 启用开发模式 3.开启dll库12345extension=php_bz2.dll extension=php_curl.dll extension=php_mbstring.dll extension=php_mysql.dll extension=php_mysqli.dll 在phi.ini 中指定扩展模块路径extension_dir = “{php路径}/php-5.6.16/ext”重新apache服务 三.mysql安装 典型安装-细节配置-并发设置-端口设置-字符集-服务名-密码配置","tags":[{"name":"apache","slug":"apache","permalink":"http://xueyao.org/tags/apache/"},{"name":"php","slug":"php","permalink":"http://xueyao.org/tags/php/"},{"name":"mysql","slug":"mysql","permalink":"http://xueyao.org/tags/mysql/"}]},{"title":"PHP实现分页功能","date":"2016-07-15T16:00:00.000Z","path":"2016/07/16/paging.html","text":"如何实现分页功能1.代码如下 12345678910$total = mysql_num_rows($res1); //页面大小 $pagesize = 3; //页面的值 $page = isset($_GET['page']) ?$_GET['page'] : 1; //页面最大数目 $maxpage = ceil($total/$pagesize); //偏移量 $offset = ($page-1)*$pagesize; $sql = \"select * from mess_info limit &#123;$offset&#125;,&#123;$pagesize&#125;\"; 123456&lt;ul class=\"pager\"&gt;&lt;li class=\"previous\"&gt;&lt;a href=\"list.php?page=1\"&gt;&amp;larr; 首页&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=\"list.php?page=&lt;?php echo $page&lt;=1 ? $page : $page-1;?&gt;\"&gt;上一页&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=\"list.php?page=&lt;?php echo $page&gt;=$maxpage ? $maxpage : $page+1;?&gt;\"&gt;下一页&lt;/a&gt;&lt;/li&gt;&lt;li class=\"next\"&gt;&lt;a href=\"list.php?page=&lt;?php echo $maxpage;?&gt;\"&gt;末页 &amp;rarr;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;","tags":[{"name":"分页","slug":"分页","permalink":"http://xueyao.org/tags/分页/"}]}]