<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>GIT on 薛尧的博客</title>
    <link>http://localhost:1313/categories/git/</link>
    <description>Recent content in GIT on 薛尧的博客</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    <copyright>&amp;copy; Copyright 2024</copyright>
    <lastBuildDate>Fri, 03 Feb 2017 11:26:31 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/git/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GitHub Pages二级域名的配置</title>
      <link>http://localhost:1313/post/2017/github-page-config-sub-domain/</link>
      <pubDate>Fri, 03 Feb 2017 11:26:31 +0000</pubDate>
      <guid>http://localhost:1313/post/2017/github-page-config-sub-domain/</guid>
      <description>&lt;h2 id=&#34;域名配置指南&#34;&gt;域名配置指南&lt;/h2&gt;&#xA;&lt;p&gt;首先创建一个新的仓库，并在设置中设置GitHub Pages的Source从master主分支上构建，点击保存，如下图所示:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://ueyao.github.io/image-hosting/blog/2017/sp170202_220301.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;并在Custom domain 里填写自定义的二级域名，如下图所示:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://ueyao.github.io/image-hosting/blog/2017/sp170202_220346.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;在你的域名注册商那里设置域名的DNS,类型CNAME,具体配置如下:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://ueyao.github.io/image-hosting/blog/2017/sp170202_220021.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;把写好的代码同步到创建的仓库中，通过浏览器访问二级域名，效果如下：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://ueyao.github.io/image-hosting/blog/2017/sp170202_220444.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;注意此二级域名的一级域名必须解析到自己flowstone.github.io下，如下图所示：&#xA;&lt;img src=&#34;https://ueyao.github.io/image-hosting/blog/2017/sp170202_220120.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Git入门</title>
      <link>http://localhost:1313/post/2016/git-guide/</link>
      <pubDate>Mon, 18 Jul 2016 22:08:00 +0000</pubDate>
      <guid>http://localhost:1313/post/2016/git-guide/</guid>
      <description>&lt;h4 id=&#34;安装&#34;&gt;安装&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;下载git OSX版&lt;/li&gt;&#xA;&lt;li&gt;下载git Windows版&lt;/li&gt;&#xA;&lt;li&gt;下载git Linux版&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h5 id=&#34;创建新仓库&#34;&gt;创建新仓库&lt;/h5&gt;&#xA;&lt;p&gt;创建新文件夹，打开，然后执行&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git init&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;以创建新的git仓库&lt;/p&gt;&#xA;&lt;h5 id=&#34;克隆仓库&#34;&gt;克隆仓库&lt;/h5&gt;&#xA;&lt;p&gt;创建一个本地仓库的克隆版本：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone /path/to/repository&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果要克隆服务器上的仓库，你的命令会是这个样子：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone username@host:/path/to/repository&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h5 id=&#34;添加与提交&#34;&gt;添加与提交&lt;/h5&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git add &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;filename&amp;#34;&lt;/span&gt;git add *&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git add .&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这是git基本工作流程的第一步;使用如下命令以实际提交改动：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git commit -m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;代码提交信息&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h5 id=&#34;推送仓库&#34;&gt;推送仓库&lt;/h5&gt;&#xA;&lt;p&gt;改动提交到远端仓库：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git push origin master&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可以把master 换成你想要推送的任何分支。&lt;/p&gt;&#xA;&lt;p&gt;如果你还没有克隆现有仓库，并欲将你的仓库连接到某个远程服务器，你可以使用如下命令添加：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git remote add origin &amp;lt;server&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h5 id=&#34;更新与合并&#34;&gt;更新与合并&lt;/h5&gt;&#xA;&lt;p&gt;要更新你的本地仓库至最新改动，执行：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git pull&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;以在你的工作目录中 获取（fetch） 并 合并（merge） 远端的改动。&lt;/p&gt;&#xA;&lt;p&gt;要合并其他分支到你的当前分支（例如 master），执行：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git merge &amp;lt;branch&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;两种情况下，git 都会尝试去自动合并改动。不幸的是，自动合并并非次次都能成功，并可能导致 冲突（conflicts）。 这时候就需要你修改这些文件来合并这些冲突（conflicts）了。改完之后，你需要执行如下命令以将它们标记为合并成功：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git add &amp;lt;filename&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在合并改动之前，也可以使用如下命令查看：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git diff &amp;lt;source_branch&amp;gt; &amp;lt;target_branch&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h5 id=&#34;替换本地改动&#34;&gt;替换本地改动&lt;/h5&gt;&#xA;&lt;p&gt;假如你做错事（自然，这是不可能的），你可以使用如下命令替换掉本地改动：&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
