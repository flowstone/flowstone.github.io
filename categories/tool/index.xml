<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tool on 薛尧笔记</title><link>https://xueyaoblog.on-fleek.app/categories/tool/</link><description>Recent content in Tool on 薛尧笔记</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Sun, 03 Feb 2019 12:23:17 +0000</lastBuildDate><atom:link href="https://xueyaoblog.on-fleek.app/categories/tool/index.xml" rel="self" type="application/rss+xml"/><item><title>Lombok的使用</title><link>https://xueyaoblog.on-fleek.app/post/2019/tool-lombok-use/</link><pubDate>Sun, 03 Feb 2019 12:23:17 +0000</pubDate><guid>https://xueyaoblog.on-fleek.app/post/2019/tool-lombok-use/</guid><description>近期在众多微信公众号中，都看到了许多大牛，写了Lombok的文章，我看了一下，基本上就围绕着如何减少代码来做说明，我来总结一下。
公司现在的项目没有使用Lombok，一些实体类都是我们用IDEA提供的快捷方式生成的，后来，公司新来了一个大牛，看到我们每当在一个实体类中新添加一个属性，就要重新生成一个Getter/Setter方法，浪费了大量的时间，一个实体类改了好多遍。后来，他叫我们使用Lombok插件，这款插件可以在编译的时候生成一些常用的方法，我们就不用那么浪费时间。
公司使用的是Maven包管理工具
&amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.projectlombok&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;lombok&amp;lt;/artifactId&amp;gt; &amp;lt;optional&amp;gt;true&amp;lt;/optional&amp;gt; &amp;lt;/dependency&amp;gt; 在使用的编辑器中添加lombok插件，我使用的是IntelliJ IDEA这款软件，国内用的比较多，大家应该知道安装一个插件。
在实体类上添加Lombok相关注解，来实现，生成对应方法
@Getter @Setter @NoArgsConstructor @AllArgsConstructor @RequiredArgsConstructor @Data public class LoginRequest { private String username; private String password; } @Getter 在类上说明生成该类中所有属性的Getter方法
@Setter 在类上说明生成该类中所有属性的Setter方法
上面两个方法，也可以使用在属性上,就是生成属性的Getter/Setter方法
@NoArgsConstructor注解，是生成无参构造方法
@AllArgsConstructor注解，是生成有参构造方法
@RequiredArgsConstructor注解，是生成不能为空属性的构造方法
@Data注解是生成Setter、Getter、toString等常用的方法
一般来说，@Data注解就够我们使用的了，如果有特殊的Getter、Setter需求，则需要自己生成对应的方法。最后，总结一些话，Lombok插件虽然能够帮助我们生成对应的方法，但是我们不能足够的依赖一个插件，如果实体类的属性命名不规范，Lombok生成的方法还是会有一些问题的，往往一个小的问题，是一个潜在的危险，我们应当能避免就避免。
常见问题，当项目运行时，如果某个属性没有Getter、Setter方法时，一定要看一下Lombok插件有没有安装。</description></item><item><title>Postman之token动态获取</title><link>https://xueyaoblog.on-fleek.app/post/2018/tool-postman-get-token/</link><pubDate>Tue, 13 Nov 2018 12:20:20 +0000</pubDate><guid>https://xueyaoblog.on-fleek.app/post/2018/tool-postman-get-token/</guid><description>目前项目涉及PC及APP端接口共用问题，后台接口给登陆后的用户设置了一个token，接口调用时请求头的参数值必须要动态生成，为了解决这个问题，查看Postman API文档，配置了可以方便后端开发者的Tests脚本，如果你需要，请按下面方式配置。
用户登陆 用户登陆页面的请求头参数为固定不变，如图所示
当填写正确的用户名和密码时，系统用返回如下图的数据，里面携带token的值,如图所示
在用户登陆测试接口页面，在点击Tests，在里面添加下面代码，如图所示：
pm.test(&amp;#34;Status code is 200&amp;#34;, function () { pm.response.to.have.status(200); }); var data = JSON.parse(responseBody); //key值 var key = &amp;#39;要加密的Key&amp;#39;; //current-timestamp var currentTimestamp = new Date().getTime().toString(); //nonce-str var nonceStr = getStr(32); function getStr(len){ len = len || 32; var chars = &amp;#39;1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&amp;#39;; var maxPos = chars.length; var s = &amp;#39;&amp;#39;; for (let i = 0; i &amp;lt; len; i++) { s += chars.charAt(Math.floor(Math.random() * maxPos)); } return s; } //token var token = data.</description></item></channel></rss>