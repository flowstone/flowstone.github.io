<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>日志 on 薛尧笔记</title><link>https://flowstone.github.io/categories/%E6%97%A5%E5%BF%97/</link><description>Recent content in 日志 on 薛尧笔记</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Sat, 08 Feb 2025 13:18:42 +0000</lastBuildDate><atom:link href="https://flowstone.github.io/categories/%E6%97%A5%E5%BF%97/index.xml" rel="self" type="application/rss+xml"/><item><title>PySide6 项目开发全攻略：打造你的文件重命名神器</title><link>https://flowstone.github.io/post/2025/pyside-guide-rename/</link><pubDate>Sat, 08 Feb 2025 13:18:42 +0000</pubDate><guid>https://flowstone.github.io/post/2025/pyside-guide-rename/</guid><description>家人们，今天来给大家唠唠如何用 PySide6 打造一个超实用的文件重命名工具。这篇文章适合想搞点 GUI 开发的 Python 小白，也能帮有经验的大佬查漏补缺。话不多说，咱们开整！
一、开发环境搭建：魔法工具大集合 1.1 开发工具 开发前，咱们得先把 “魔法工具” 准备好：
PyCharm 2023.1：这可是 Python 开发的神器，智能代码补全就像你的专属小秘书，敲代码的时候自动提示，效率飞起！还集成了 Qt Designer，可视化界面设计，拖拖拽拽就搞定，简直不要太爽！ Python 3.10：建议大家用虚拟环境，venv 或者 conda 都行。就好比给你的项目穿上一层 “隔离衣”，每个项目都有自己独立的 Python 环境，互不干扰，再也不用担心包冲突的问题啦！ PySide6 6.5.0：Qt 官方钦点的 Python 绑定库，有了它，就能轻松调用 Qt 的各种强大功能，搭建出酷炫的 GUI 界面。 1.2 项目结构：文件的秘密基地 项目结构就像一个有序的小基地，每个文件都有自己的 “小窝”：
FsPySide6Project/ ├──.gitignore # 版本控制的“小卫士”，忽略那些不需要的文件 ├── batch_file_renamer.py # 文件重命名的“大脑”，核心功能都在这儿 ├── main.py # 程序入口，就像房子的大门，从这儿开始你的旅程 ├── main_window.py # 主窗口界面，是你的“门面担当” └── requirements.txt # 依赖清单，记录着项目需要的各种“小帮手” 来看看这些文件都在干啥：
.gitignore：默默守护着项目，把__pycache__/、.idea/ 这些开发环境文件拒之门外，让你的代码仓库干干净净。 requirements.txt：里面写着PySide6&amp;gt;=6.5.0，这是项目的 “粮草清单”，告诉别人运行这个项目需要哪些依赖。 main.py：程序的启动入口，初始化 QApplication，就像给汽车点火，让整个程序跑起来。 main_window.py：主界面的 “大管家”，采用模块化设计，以后想加新功能，就像搭积木一样简单。 batch_file_renamer.py：文件重命名业务逻辑的 “神秘组织”，各种复杂的重命名操作都由它来搞定。 二、核心代码解析：揭开魔法的神秘面纱 2.</description></item><item><title>技术博客架构升级：解锁高效写作新体验</title><link>https://flowstone.github.io/post/2025/blog-update-articles/</link><pubDate>Fri, 07 Feb 2025 19:18:42 +0000</pubDate><guid>https://flowstone.github.io/post/2025/blog-update-articles/</guid><description>最近我对自己的技术博客架构做了一次重要升级，实现了文章内容与静态网站生成器的完全解耦。这个方案让写作回归纯粹，同时保持了自动化部署的优势。以下是具体的实现方案：
🛠️ 方案架构 主仓库：flowstone/flowstone.github.io​
主仓库仅保留静态网站生成器的相关配置，果断移除了所有文章内容。如此一来，主仓库更加简洁，专注于网站生成的核心配置工作，为后续的自动化部署奠定坚实基础。 文章仓库：flowstone/blog-articles​
文章仓库则全心全意地承担起存放 Markdown 格式博文的重任。它就像一个专属的知识宝库，让每一篇文章都能在自己的 “小天地” 里有序存放，便于管理和维护。 自动化桥梁：GitHub Actions 工作流
每日定时同步文章变更，实现自动构建部署 ⚙️ 核心工作流配置 添加了同步文章工作流sync-articles.yml​
name: Content Sync Automation on: push: branches: [main] schedule: - cron: &amp;#39;0 0 * * *&amp;#39; # 每天UTC时间0点同步 workflow_dispatch: jobs: sync-content: runs-on: ubuntu-latest steps: - name: Checkout Main Repo uses: actions/checkout@v3 with: persist-credentials: false - name: Sync Articles Repo uses: actions/checkout@v3 with: repository: flowstone/blog-articles path: content/posts token: ${{ secrets.GITHUB_TOKEN }} - name: Configure Git run: | git config --global user.</description></item><item><title>博客快速迁移到Sourceforge平台</title><link>https://flowstone.github.io/post/2024/blog-remove-sourceforge/</link><pubDate>Sat, 24 Feb 2024 19:18:42 +0000</pubDate><guid>https://flowstone.github.io/post/2024/blog-remove-sourceforge/</guid><description>描述 因为个人原因，准备把托管在阿里云虚拟主机上的博客迁移到免费的sourceforget平台上， 在迁移中遇到很多问题，一一记录下来。
操作 1.从虚拟主机中下载博客的相关文件(网站源码&amp;amp;数据库) 2.上传网站源码到FTP中 打开Sourceforget网站获取FTP连接信息，可以通过项目中的Admin-&amp;gt;Project Web Hosting-&amp;gt;Documentation,查找到相关FTP配置,如下图
FTP配置中需要注意登录后的文件路径，我已经在图中标出来了
FTP默认路径 FTP主机空间路径 3.同步数据库 通过项目中的Admin-&amp;gt;Project Web Hosting-&amp;gt;MySQL Database，可以查看数据库的相关配置，也可以修改数据库密码，如下图 Sourceforge数据库中有很多限制，需要慢慢的把数据导入,还有此数据库不支持远程连接
4.预览网站 Sourceforge提供二级域名，格式是
项目名.sourceforge.io 项目名.sourceforge.net 两个都可以，访问网站，如下图 5.绑定自定义域名 通过项目中的Admin-&amp;gt;Project Web Hosting-&amp;gt;Vhost DNS,可以配置绑定的自定义域名，如下图 我绑定是自己博客的二级域名,然后在域名的DNS解析系统中配置映射，如果按照我们常理来说，应该绑定CNAME记录flowstone.sourceforge.io,一开始我却实这样配置了，但是域名却没办法正确显示，提示了一些错误，原来是Sourceforge通过cloudflare进行了一些CDN加速，没办法正确解析到真正的服务器地址。
其实它在帮助文档中写了详细的配置，我没有按照它的说明来配置(IP地址固定)，文档如下： 最终DNS解析配置如下： 如果我们按照它的配置，指向自己的域名，就可以看到域名解析生效了，效果如下 值得注意的是当你配置了自定义域名后，Sourceforge提交的二级域名将自己跳转到你的项目目录中，无法查看你的搭建的网站。
注意 在这些操作里，我遇到了另外一个问题，就是我按照上面的操作，打开我的域名，页面竟报出404错误，如下图 就是这个问题，困扰我一天，我一直以为是DNS解析的问题，查询好多资料，也看了官方的一些客户支持问题，从而确定DNS没有配置错误，那是什么问题造成的呢？
说明域名已经找到了服务器，但是指定的目录下并没有我上传的网站源码，真是奇了怪，不科学，我专门去FTP上找了一番，文件也在，最后在一篇博客里发现了问题，原来官方的配置是基于PHP7版本，但是我手贱的把PHP版本改成PHP8,所以域名解析时并没有找到正确路径，也就是说PHP8版本里面有了特殊的配置，我猜想一种是IP的改变，一种是网站源码路径的改变。</description></item></channel></rss>