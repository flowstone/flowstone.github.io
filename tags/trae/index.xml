<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Trae on 薛尧笔记</title><link>https://flowstone.github.io/tags/trae/</link><description>Recent content in Trae on 薛尧笔记</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Tue, 11 Feb 2025 18:18:42 +0000</lastBuildDate><atom:link href="https://flowstone.github.io/tags/trae/index.xml" rel="self" type="application/rss+xml"/><item><title>还在用 Cursor？免费用 Trae 打造贪吃蛇游戏</title><link>https://flowstone.github.io/post/2025/20250211-01/</link><pubDate>Tue, 11 Feb 2025 18:18:42 +0000</pubDate><guid>https://flowstone.github.io/post/2025/20250211-01/</guid><description>各位程序员小伙伴们，还在为寻找高效的代码生成工具而发愁吗？今天给大家介绍一款能替代 Cursor 的神器 ——Trae，它是一款强大的 AI 代码生成器。目前，Trae 官网仅提供 MacOS 系统的安装包，Mac 用户们有福啦！
​​
一、下载与安装 第一步，当然是下载安装 Trae。这一步很简单，就像平常安装其他软件一样，从官网获取安装包后，按照提示一步步操作即可。
​​
二、欢迎界面与主题配置 安装完成后，打开 Trae，首先映入眼帘的是欢迎界面，它就像一个热情的向导，引导你开启代码之旅。
​​
接着，你可以根据自己的喜好配置主题，亮色主题适合白天，暗色主题则在夜间更护眼，让你的代码编辑环境更加舒适。
​​
三、跳过配置导入，登录账号 这时，Trae 会询问是否需要导入之前 VS Code、Cursor 的配置，我们先跳过这一步，直接进入后续操作。
​​
然后，需要使用 Github 授权登录，这样才能充分使用 Trae 的各项功能。
​​
四、熟悉默认界面，选择 Builder 登录成功后，我们看到的是软件的默认界面，简洁明了，各个功能区域一目了然。
​​
因为我们要使用自动编写代码功能，所以选择 Builder。Builder 提供了两个默认示例，方便我们快速上手。
​​
五、生成贪吃蛇游戏项目 我选择生成贪吃蛇游戏，结果 AI 提示我没有打开存放游戏的文件夹。
​​
于是，我新建了一个 Greedy-Snake 目录，贪吃蛇游戏将在这个目录下创建。
​​
接着，AI 开始工作，它自动选定了合适的语言和框架，并开始初始化项目。
​​
AI 生成的文件，需要用户点击接受才能保存到目录中，这是为了确保我们对生成的代码有控制权。
​​
很快，一个 Node.js 项目就生成好了，目录下的文件结构也随之呈现。在整个过程中，我们只需根据 AI 的提示进行操作，非常简单。
​​
六、运行游戏及功能优化 最后，我们来运行游戏，看看效果如何。结果发现游戏速度太快，我这手速根本跟不上，很快就 “Game Over” 了，不过游戏结束弹框倒是正常出现。
​​
速度太快了，很快就GG了，游戏结束弹框也有</description></item></channel></rss>