<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>MyBatis on 薛尧笔记</title><link>https://xueyao.netlify.app/tags/mybatis/</link><description>Recent content in MyBatis on 薛尧笔记</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Mon, 17 Feb 2025 18:18:42 +0000</lastBuildDate><atom:link href="https://xueyao.netlify.app/tags/mybatis/index.xml" rel="self" type="application/rss+xml"/><item><title>MyBatis Plus中XML复杂映射，一对多，多中一对一"</title><link>https://xueyao.netlify.app/post/2025/20250217-02/</link><pubDate>Mon, 17 Feb 2025 18:18:42 +0000</pubDate><guid>https://xueyao.netlify.app/post/2025/20250217-02/</guid><description>现实生活中的例子 我们先不看代码，想象一下，你在管理一个学校的信息系统。学校里有老师，每个老师可以教多个班级，这就是典型的一对多关系。而每个班级里又有一个班主任，这就是多中嵌套一对一的关系。在数据库里，这些信息可能存放在不同的表中，而我们要用 Java 代码把它们整合起来。
MyBatis Plus 的resultMap来帮忙 resultMap就是 MyBatis 里用来建立数据库表和 Java 对象之间关系的工具。下面我们通过一段结合学校场景的具体代码，来看看它是怎么工作的，以及是否存在潜在问题。
代码示例 &amp;lt;resultMap id=&amp;#34;teacherSchoolMap&amp;#34; type=&amp;#34;com.school.vo.TeacherVO&amp;#34;&amp;gt; &amp;lt;result column=&amp;#34;TEACHER_ID&amp;#34; jdbcType=&amp;#34;VARCHAR&amp;#34; property=&amp;#34;id&amp;#34;/&amp;gt; &amp;lt;result column=&amp;#34;TEACHER_NAME&amp;#34; jdbcType=&amp;#34;VARCHAR&amp;#34; property=&amp;#34;name&amp;#34;/&amp;gt; &amp;lt;result column=&amp;#34;HIRE_DATE&amp;#34; jdbcType=&amp;#34;TIMESTAMP&amp;#34; property=&amp;#34;hireDate&amp;#34;/&amp;gt; &amp;lt;collection property=&amp;#34;teachingClasses&amp;#34; ofType=&amp;#34;com.school.vo.ClassVO&amp;#34;&amp;gt; &amp;lt;id column=&amp;#34;CLASS_ID&amp;#34; jdbcType=&amp;#34;VARCHAR&amp;#34; property=&amp;#34;id&amp;#34; /&amp;gt; &amp;lt;result column=&amp;#34;CLASS_NAME&amp;#34; jdbcType=&amp;#34;VARCHAR&amp;#34; property=&amp;#34;className&amp;#34; /&amp;gt; &amp;lt;result column=&amp;#34;CREATION_TIME&amp;#34; jdbcType=&amp;#34;TIMESTAMP&amp;#34; property=&amp;#34;creationTime&amp;#34; /&amp;gt; &amp;lt;association property=&amp;#34;classTeacher&amp;#34; javaType=&amp;#34;com.school.vo.TeacherVO&amp;#34; resultMap=&amp;#34;classTeacherMap&amp;#34;&amp;gt; &amp;lt;/association&amp;gt; &amp;lt;/collection&amp;gt; &amp;lt;/resultMap&amp;gt; &amp;lt;resultMap id=&amp;#34;classTeacherMap&amp;#34; type=&amp;#34;com.school.vo.TeacherVO&amp;#34;&amp;gt; &amp;lt;id column=&amp;#34;CLASS_TEACHER_ID&amp;#34; jdbcType=&amp;#34;VARCHAR&amp;#34; property=&amp;#34;id&amp;#34; /&amp;gt; &amp;lt;result column=&amp;#34;CLASS_TEACHER_NAME&amp;#34; jdbcType=&amp;#34;VARCHAR&amp;#34; property=&amp;#34;name&amp;#34; /&amp;gt; &amp;lt;result column=&amp;#34;CONTACT_NUMBER&amp;#34; jdbcType=&amp;#34;VARCHAR&amp;#34; property=&amp;#34;contactNumber&amp;#34; /&amp;gt; &amp;lt;/resultMap&amp;gt; 一对多关系的映射 在上面的代码里，标签就是用来处理一对多关系的。teacherSchoolMap对应的 Java 对象代表一位老师，而teachingClasses是这位老师所教的多个班级，一个老师可以教多个班级，这就是一对多关系。通过property指定 Java 对象里的集合属性名，ofType指定集合里每个元素的类型，MyBatis 就能把数据库里相关的数据，正确地放进这个集合里。</description></item></channel></rss>