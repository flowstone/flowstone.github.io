# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy Hugo site to Pages

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  repository_dispatch:
    types: [article_update]
  push:
    branches:
      - main  # 当推送到主分支时触发
  schedule:
    - cron: '0 0 * * *'  # 每天同步一次


# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      # Checkout blog repository
      - name: Checkout blog repo
        uses: actions/checkout@v2

      # Checkout articles repository as a submodule
      - name: Checkout articles repo
        uses: actions/checkout@v2
        with:
          submodules: recursive  # 关键参数
          fetch-depth: 0        # 获取全部提交历史（避免浅克隆导致子模块更新失败）
      - name: Force update submodules
        run: git submodule update --init --force --recursive    
       
       # Set Git configuration for user identity
      - name: Set Git configuration
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
      
      - name: Check and commit submodule changes
        run: |
          if [ ! -d "content/post" ]; then
            echo "Error: 'content/post' submodule missing!"
            exit 1
          fi
  
          if ! git diff --quiet --exit-code content/post; then
            git add content/post
            git commit -m "Sync articles from new repository"
            git push origin main
          fi

  # Build job
  build:
    runs-on: ubuntu-latest
    needs: sync
    env:
      HUGO_VERSION: 0.120.4
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      - name: Install Dart Sass
        run: sudo snap install dart-sass
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Debug content/post directory
        run: |
          if [ -d "content/post" ]; then
            echo "content/post directory exists."
            ls -l content/post
          else
            echo "content/post directory does not exist."
          fi
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
      - name: Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo --minify --baseURL "https://flowstone.github.io/"
      - name: Deploy 🚀
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public  # 你的生成文件夹
  
